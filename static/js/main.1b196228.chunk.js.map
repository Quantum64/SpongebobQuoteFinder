{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","search","results","text","_this2","trim","setState","__webpack_require__","e","then","bind","episodes","_this3","resultIndex","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","result","value","resultDisplay","react_default","a","createElement","Grid_default","item","key","Card_default","CardContent_default","Typography_default","variant","component","season","episode","title","color","percent","line","stype","fontSize","gutterBottom","by","push","err","return","extraText","length","classes","className","CssBaseline_default","AppBar_default","position","mobileTitle","noWrap","Toolbar_default","searchIcon","Search_default","InputBase_default","placeholder","id","root","inputRoot","input","inputInput","onChange","event","updateSearch","target","htmlFor","style","display","container","spacing","direction","justify","alignItems","padding","margin","width","align","Component","withStyles","theme","menuButton","marginLeft","marginRight","defineProperty","breakpoints","up","marginTop","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","unit","height","pointerEvents","justifyContent","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","setTimeout"],"mappings":"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","file":"static/js/main.1b196228.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      results: []\n    };\n  }\n\n  updateSearch(text) {\n    let results = [];\n    if (text.trim() !== \"\") {\n      import('./episodes/search').then((episodes) => {\n        results = episodes.search(text);\n        this.setState({\n          search: text,\n          results: results\n        });\n      });\n      return;\n    }\n    this.setState({\n      search: text,\n      results: results\n    });\n  }\n\n  render() {\n    let results = [];\n    let resultIndex = 0;\n    for (let result of this.state.results) {\n      const resultDisplay = (\n        <Grid item key={\"result-card-\" + resultIndex}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\">\n                Season {result.season} Episode {result.episode}: {result.title}\n              </Typography>\n              <Typography color=\"textSecondary\">\n                About {result.percent}% through the episode\n              </Typography>\n              <br />\n              <Typography component=\"p\">\n                “{result.line}”\n              </Typography>\n              <Typography stype={{ fontSize: 14 }} color=\"textSecondary\" gutterBottom>\n                <i>— {result.by}</i>\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      );\n      results.push(resultDisplay)\n      resultIndex++;\n    }\n    let extraText = \"© 2018 Quantum Development @ University of Cincinnati\"\n    if (results.length === 0) {\n      extraText = \"Type a quote you want to find above...\";\n    }\n\n    const { classes } = this.props;\n    const appbarTitle = \"Spongebob Quote Finder\";\n    return (\n      <div className=\"App\">\n        <CssBaseline />\n        <AppBar position=\"static\">\n          <Typography className={classes.mobileTitle} variant=\"h6\" color=\"inherit\" noWrap>\n            {appbarTitle}\n          </Typography>\n          <Toolbar>\n            <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n              {appbarTitle}\n            </Typography>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Search…\"\n                id=\"search\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                value={this.state.search}\n                onChange={(event) => this.updateSearch(event.target.value)}\n              >\n              <label htmlFor=\"search\" style={{ display: \"none\" }}>Search</label>\n              </InputBase>\n            </div>\n          </Toolbar>\n        </AppBar>\n        <Grid container spacing={24} direction=\"column\" justify=\"center\" alignItems=\"center\" style={{ padding: 20, margin: 0, width: '100%', }}>\n          {results}\n          <Grid item>\n            <Typography variant=\"subheading\" gutterBottom align=\"center\" style={{ color: \"grey\" }}>\n              {extraText}\n            </Typography>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  mobileTitle: {\n    display: 'block',\n    marginTop: 10,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing.unit * 2,\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit * 3,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  }\n});\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\nsetTimeout(function () {\n    import('./episodes/search')\n});"],"sourceRoot":""}