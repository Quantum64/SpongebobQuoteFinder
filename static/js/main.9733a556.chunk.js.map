{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","orange","secondary","amber","typography","useNextVariants","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","search","results","pwa","prompt","text","_this2","trim","setState","__webpack_require__","e","then","bind","episodes","_this3","userChoice","choiceResult","outcome","console","log","_this4","resultIndex","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","result","value","resultDisplay","react_default","a","createElement","Grid_default","item","key","Card_default","CardContent_default","Typography_default","variant","component","season","episode","title","color","percent","dangerouslySetInnerHTML","__html","line","stype","fontSize","gutterBottom","by","push","err","return","extraText","length","classes","cloud","className","cloudIcon","IconButton_default","aria-owns","aria-haspopup","onClick","installClick","CloudDownload_default","CssBaseline_default","core_styles","AppBar_default","position","mobileTitle","noWrap","Toolbar_default","searchIcon","Search_default","InputBase_default","placeholder","id","root","inputRoot","input","inputInput","onChange","event","updateSearch","target","htmlFor","style","display","container","spacing","direction","justify","alignItems","padding","margin","width","align","Component","withStyles","menuButton","marginLeft","marginRight","defineProperty","breakpoints","up","marginTop","borderRadius","shape","backgroundColor","fade","common","white","&:hover","unit","height","pointerEvents","justifyContent","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","float","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","String","prototype","splice","idx","rem","str","slice","Math","abs","installer","addEventListener","preventDefault","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","setTimeout"],"mappings":"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","file":"static/js/main.9733a556.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloudDownload from '@material-ui/icons/CloudDownload';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: orange[900] },\n    secondary: amber,\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      results: [],\n      pwa: props.prompt\n    };\n  }\n\n  updateSearch(text) {\n    let results = [];\n    if (text.trim() !== \"\") {\n      import('./episodes/search').then((episodes) => {\n        results = episodes.search(text);\n        this.setState({\n          search: text,\n          results: results\n        });\n      });\n      return;\n    }\n    this.setState({\n      search: text,\n      results: results\n    });\n  }\n\n  installClick() {\n    this.state.pwa().prompt();\n    this.state.pwa().userChoice\n      .then((choiceResult) => {\n        if (choiceResult.outcome === 'accepted') {\n          console.log('User accepted the A2HS prompt');\n          this.setState({\n            pwa: () => undefined\n          });\n        } else {\n          console.log('User dismissed the A2HS prompt');\n        }\n      });\n  }\n\n  render() {\n    let results = [];\n    let resultIndex = 0;\n    for (let result of this.state.results) {\n\n      const resultDisplay = (\n        <Grid item key={\"result-card-\" + resultIndex}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\">\n                Season {result.season} Episode {result.episode}: {result.title}\n              </Typography>\n              <Typography color=\"textSecondary\">\n                About {result.percent}% through the episode\n              </Typography>\n              <br />\n              <Typography component=\"p\" dangerouslySetInnerHTML={{ __html: \"“\" + result.line + \"”\" }} />\n              <Typography stype={{ fontSize: 14 }} color=\"textSecondary\" gutterBottom>\n                <i>— {result.by}</i>\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      );\n      results.push(resultDisplay)\n      resultIndex++;\n    }\n    let extraText = \"© 2018 Quantum Development @ University of Cincinnati\"\n    if (results.length === 0) {\n      extraText = \"Type a quote you want to find above...\";\n    }\n\n    const { classes } = this.props;\n    const cloud = this.state.pwa() === undefined ? \"\" : (\n      <div className={classes.cloudIcon}>\n        <IconButton\n          aria-owns={'menu-appbar'}\n          aria-haspopup=\"true\"\n          onClick={() => this.installClick()}\n          color=\"inherit\"\n        >\n          <CloudDownload />\n        </IconButton>\n      </div>\n    )\n    const appbarTitle = \"Spongebob Quote Finder\";\n    return (\n      <div className=\"App\">\n        <CssBaseline />\n        <MuiThemeProvider theme={theme}>\n          <AppBar position=\"static\">\n            <Typography className={classes.mobileTitle} variant=\"h6\" color=\"inherit\" noWrap>\n              {appbarTitle}\n            </Typography>\n            <Toolbar>\n              <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n                {appbarTitle}\n              </Typography>\n              <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                  <SearchIcon />\n                </div>\n                <InputBase\n                  placeholder=\"Search…\"\n                  id=\"search\"\n                  classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                  }}\n                  value={this.state.search}\n                  onChange={(event) => this.updateSearch(event.target.value)}\n                >\n                </InputBase>\n                <label htmlFor=\"search\" style={{ display: \"none\" }}>Search</label>\n              </div>\n              {cloud}\n            </Toolbar>\n          </AppBar>\n          <Grid container spacing={24} direction=\"column\" justify=\"center\" alignItems=\"center\" style={{ padding: 20, margin: 0, width: '100%', }}>\n            {results}\n            <Grid item>\n              <Typography variant=\"subtitle1\" gutterBottom align=\"center\" style={{ color: \"grey\" }}>\n                {extraText}\n              </Typography>\n            </Grid>\n          </Grid>\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  mobileTitle: {\n    display: 'block',\n    marginTop: 10,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    //backgroundColor: fade(theme.palette.common.white, 0.25),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n      //backgroundColor: fade(theme.palette.common.white, 0.40),\n    },\n    marginRight: theme.spacing.unit * 2,\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit * 3,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  },\n  cloudIcon: {\n    display: 'flex',\n    float: 'right',\n    marginLeft: 'auto',\n    marginRight: 0\n  },\n});\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\n// eslint-disable-next-line no-extend-native\nString.prototype.splice = function (idx, rem, str) {\n    return this.slice(0, idx) + str + this.slice(idx + Math.abs(rem));\n};\n\nlet installer = undefined;\nwindow.addEventListener('beforeinstallprompt', (e) => {\n    e.preventDefault();\n    installer = e;\n});\n\nReactDOM.render(<App prompt={() => installer} />, document.getElementById('root'));\n\nserviceWorker.register();\nsetTimeout(function () {\n    import('./episodes/search')\n});"],"sourceRoot":""}